Viewport: The visible portion of a web page or document in a browser.

------------------------------------------------------------ HTML

HTML: HyperText Markup Language

HTML is a language, or rather a specification, for what elements are rendered on a page, render meaning to be drawn in the browser, which may or may not be immediately visible. When you create an html file, this is the basic template you will see.

<!DOCTYPE html>
<html>
<head>
    <title></title>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
</head>
<body>
</body>
</html>

Every element in an html document is denoted by tags, such as html and head. Usually, there is an opening and closing tag, or start and end. Closing tags always have the '/'. So the head element is denoted by <head></head>. Tags like <meta /> are known as self-enclosing tags. There are not many, but some elements in html use self-enclosing tags, such as <meta /> and <img />.

In html, elements are nested inside one another. Notice in the head tag, there is a title element and two meta elements between its opening and closing tags. This is how we nest content. For example:

    <main>
        <h1>Why: Dogs and Cats</h1>
        <article>
            <h2>Why We Think Cats Love Milk</h2>
        </article>
        <article>
            <h2>Why Dogs Roll in the Grass</h2>
        </article>
    </main>

Here, inside a main element, there is a heading, or title, "Why: Dogs and Cats", then two articles with their own titles, "Why We Think Cats Love Milk" and "Why Dogs Roll in the Grass". HTML tags specify what kind of element is being rendered, what it contains and what metadata it has.

Metadata is specified in attributes.

    <a href="https://www.google.com" target="_blank">Google</a>

The <a></a> tags are for declaring a hyperlink, or link, element. It has the attributes, href and target. The href attribute specifies a webpage or file to open, while the target attribute opens the webpage in a new tab.

------------------------------------------------------------ CSS

CSS: Cascading StyleSheet

CSS is a specification for styling html elements. Each rule 

    body {
        color: white;
        background-color: black;
    }

------------------------------------------------------------ PAGE

------------------------------- Render tree

Refer DOM.

HOW THE BROWSER WORKS

------------------------------- Static Page

A static page is often just html and css. While there may be animations and some features offered by html elements like for forms and dropdown sections, the content of a static page does not change.

------------------------------- Dynamic Page

A dynamic page has content that changes. For instance, populating an article with posts or based on user input, only displaying the searched content. However, how the content is changed can be due to Javascript.

------------------------------------------------------------ DOM

DOM: Document Object Model
When a browser renders a webpage, it reads an html document and creates a tree of nodes. A tree is a type of data structure. Each node stores an element in the html. For example:

    window
    - document
      - head
        - title
        - meta charset
        - meta viewport
      - body
        - main
          - h1
          - article
            - h2
          - article
            - h2

Here, our tree looks like a file system, starting with the window object. We call it the root because it has no parent element and is the top of our tree. It has only one child, document, and document has two children. In trees, we call children branches and as follow the levels, our branches branch out, eventually ending in elements like the headings (h1, h2), paragraphs (p), images (img), and so on.

------------------------------------------------------------ CSSOM

CSSOM: CSS Object Model

